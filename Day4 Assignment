Answer 1

In general case the both expressions are invalid. For example the first expression is invalid because there is no such
operation as + for pointers or iterators. The second expression is invalid in case when non-random access iterators are
used. For example when bidirectional iterators are used.

So the correct construction in C++ will look the following way

mid = std::next( beg, std::distance( beg, end ) / 2 );

*******************************************************************************************************************

Answer 2

Steps to perform Ternary Search: 

1. First, we compare the key with the element at mid1. If found equal, we return mid1.
2. If not, then we compare the key with the element at mid2. If found equal, we return mid2.
3. If not, then we check whether the key is less than the element at mid1. If yes, then recur to the first part.
4. If not, then we check whether the key is greater than the element at mid2. If yes, then recur to the third part.
5. If not, then we recur to the second (middle) part.Steps to perform Ternary Search: 

---------------------------------------------------------------------------------------------------------------------------------------------

